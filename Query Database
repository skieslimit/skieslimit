#query database & write some shit
import sqlite3, requests, sys, os, datetime, glob, re, json,pyodbc,math
from bs4 import BeautifulSoup
from urllib.request import urlopen

#devgxkpsql01 - server
#kapowdata - database (chi

#CurrentWeather - table
#debug

def querycurrentweather():
    CityNames = []
    Country = []
    Locations = []
    query = "select CityName,Country from CurrentWeather;"
    conn = pyodbc.connect('Driver={SQL Server};'
                      'Server=devgxkpsql01;'
                      'Database=kapowdata;'
                      'Trusted_Connection=yes;')
    cursor = conn.cursor()
    cursor.execute(query)
    results = cursor.fetchall()
    for r in results:
      Locations.append(r)
      CityNames = dict(Locations).keys()
    #print(output)
    #list(zip(*[('a', 1), ('b', 2), ('c', 3), ('d', 4)])) will output [('a', 'b', 'c', 'd'), (1, 2, 3, 4)]
    #Country = list(zip(*[CityNames]))
      Country = dict(Locations).values()
    cursor.close()
    return [CityNames,Country,Locations]


def weatherchannel(CityName,Country):
    token = 'dcfeead876msh2e513db9f581576p146cbdjsnf4c3290e6acf'
    api_url_base = 'https://community-open-weather-map.p.rapidapi.com/weather'    
    headers = {'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com','x-rapidapi-key': token}
    body = {"q":CityName,"y":Country}
    weatherdescription = []
    print(weatherdescription)
    temp = []
    weatherdetails = []
    request = requests.get(api_url_base,params= body,headers= headers)
#  b'{"coord":{"lon":-83.73,"lat":42.27},"weather":[{"id":502,"main":"Rain","description":"heavy intensity rain","icon":"10n"},{"id":701,"main":"Mist","description":"mist","icon":"50n"}],"base":"stations","main":{"temp":291.6,"pressure":1011,"humidity":93,"temp_min":290.37,"temp_max":293.15},"visibility":11265,"wind":{"speed":5.1,"deg":160},"rain":{"1h":1.25},"clouds":{"all":90},"dt":1566866159,"sys":{"type":1,"id":3313,"message":0.0098,"country":"US","sunrise":1566816830,"sunset":1566865210},"timezone":-14400,"id":4984247,"name":"Ann Arbor","cod":200}'
    if request.status_code == 200:
          try:
            responseData = json.loads(request.content.decode('utf-8'))
            #responsedata.get() should also work to extract the values of the keys below
            weathermain = responseData["main"]
            weather = responseData["weather"]
            weatherdescription = weather[0]["description"]
            weatherdetails = weather[0]["main"]
            temp = weathermain["temp"]
            TempC = temp - 273.15
            TempF = TempC * 9/5 
            TempF = TempF + 32
          except:
              pass
              
    return [weatherdetails, weatherdescription, TempF, TempC]
       # return json.loads(request.content.decode('utf-8'))

def updateweather(CityName,WeatherMain,WeatherDescription,TempF, TempC):
          conn = pyodbc.connect('Driver={SQL Server};'
                          'Server=devgxkpsql01;'
                          'Database=kapowdata;'
                          'Trusted_Connection=yes;')
          query = "UPDATE CurrentWeather SET Weather = \'"+WeatherMain+"\' ,Description = \'"+WeatherDescription+"\' ,UPDATEBYUSER = 'Jimmywhispers', UpdateDate = GETDATE()  WHERE CityName = \'"+CityName+"\';"
          cursor = conn.cursor()
          cursor.execute(query)
          cursor.commit()
          cursor.close()

def main():
      CityNames = querycurrentweather()
      #City,Country = zip(*CityNames[2])
      print(CityNames) 
      for city in CityNames[2]:
          weather = weatherchannel(City,Country)
          updateweather(city[0],weather[0],weather[1],weather[2],weather[3])

if __name__ == "__main__":
  main()
